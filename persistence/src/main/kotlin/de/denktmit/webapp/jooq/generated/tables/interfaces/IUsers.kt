/*
 * This file is generated by jOOQ.
 */
package de.denktmit.webapp.jooq.generated.tables.interfaces


import jakarta.persistence.Column
import jakarta.persistence.Entity
import jakarta.persistence.Id
import jakarta.persistence.Table
import jakarta.validation.constraints.NotNull
import jakarta.validation.constraints.Size

import java.io.Serializable
import java.time.Instant


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
@Entity
@Table(
    name = "users",
    schema = "public"
)
interface IUsers : Serializable {
    @get:Id
    @get:Column(name = "user_id", nullable = false)
    @get:NotNull
    var userId: Long?
    @get:Column(name = "mail", nullable = false, length = 255)
    @get:NotNull
    @get:Size(max = 255)
    var mail: String?
    @get:Column(name = "password", nullable = false, length = 500)
    @get:NotNull
    @get:Size(max = 500)
    var password: String?
    @get:Column(name = "disabled")
    var disabled: Boolean?
    @get:Column(name = "locked_until", nullable = false)
    @get:NotNull
    var lockedUntil: Instant?
    @get:Column(name = "account_valid_until", nullable = false)
    @get:NotNull
    var accountValidUntil: Instant?
    @get:Column(name = "credentials_valid_until", nullable = false)
    @get:NotNull
    var credentialsValidUntil: Instant?

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface IUsers
     */
    fun from(from: IUsers)

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface IUsers
     */
    fun <E : IUsers> into(into: E): E
}
